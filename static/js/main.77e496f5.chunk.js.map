{"version":3,"sources":["components/Section/Section.module.css","components/Button/Button.module.css","components/Section/Section.js","components/Button/Buttons.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Buttons","names","onClick","console","log","Object","keys","map","name","index","type","button","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","Math","round","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,yB,+JCCdC,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACI,0BAASC,UAAWC,IAAEJ,QAAtB,UACKC,GAAS,6BAAKA,IACdC,M,gBCHAG,EAAU,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAE5B,OADAC,QAAQC,IAAIH,GAERI,OAAOC,KAAKL,GAAOM,KAAK,SAACC,EAAMC,GAC3B,OAAO,wBAEHC,KAAK,SACLZ,UAAWC,IAAEY,OACbT,QAAS,WAAOA,EAAQM,IAJrB,SAKLA,GAJOC,OCPRG,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBACnD,OACI,gCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WC8BGC,EAhCH,WACV,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAEMN,EAAQH,EAAOC,EAAUC,EAQzBE,EAAqBM,KAAKC,MAAMX,EAAOG,EAAQ,KAErD,OACE,gCACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CAASK,MAAO,CAACY,OAAKC,UAAQC,OAAMb,QAXpB,SAACM,GACR,SAATA,GAAkBY,GAAQ,SAAAK,GAAQ,OAAIA,EAAW,KACxC,YAATjB,GAAqBa,GAAW,SAAAK,GAAW,OAAIA,EAAa,KACnD,QAATlB,GAAiBc,GAAO,SAAAK,GAAO,OAAIA,EAAU,UAU/C,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACGoB,EAAQ,cAAC,EAAD,CACPH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAAuB,0BC3BrDW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.77e496f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__1SQig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3GLu7\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n        <section className={s.Section}>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </section>\r\n    );\r\n}; \r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nexport const Buttons = ({names, onClick}) => {\r\n    console.log(names);\r\n    return (\r\n        Object.keys(names).map( (name, index) => {\r\n            return <button \r\n                key={index}\r\n                type=\"button\" \r\n                className={s.button}\r\n                onClick={() => {onClick(name)}}\r\n            >{name}</button>;\r\n        })\r\n    );\r\n};\r\n\r\nButtons.propTypes = {\r\n    names: PropTypes.shape({\r\n        good: PropTypes.number.isRequired,\r\n        neutral: PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n    }),\r\n    onClick: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nexport const Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <div>\r\n            <p>Good: {good}</p>\r\n            <p>Neutral: {neutral}</p>\r\n            <p>Bad: {bad}</p>\r\n            <p>Total: {total}</p>\r\n            <p>Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n    );\r\n}; \r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};","import { useState } from 'react';\nimport './App.css';\nimport { Section } from './components/Section/Section';\nimport { Buttons } from './components/Button/Buttons';\nimport { Statistics } from './components/Statistics/Statistics';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  \n  const total = good + neutral + bad;\n\n  const handleOnClick = (name) => {\n    if (name === 'good') {setGood(prevGood => prevGood + 1)}\n    if (name === 'neutral') {setNeutral(prevNeutral => prevNeutral+ 1)}\n    if (name === 'bad') {setBad(prevBad => prevBad + 1)}\n  };\n\n  const positivePercentage = Math.round(good / total * 100);\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <Buttons names={{good,neutral,bad}} onClick={handleOnClick}/>\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? <Statistics \n          good={good} \n          neutral={neutral}\n          bad={bad} \n          total={total} \n          positivePercentage={positivePercentage}/>: 'No feedback given'}\n      </Section> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}